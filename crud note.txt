

------------- create json server -------------

npx json-server --watch db.json --port 8000


------------- Create ------------- 

const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch("https://api.example.com/users", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, email }),
      });
      if (response.ok) {
        // handle success
      }
    } catch (error) {
      console.error("Error creating user:", error);
    }
};


------------- Read (GET): ------------- 
const fetchData = async () => {
    try {
    const response = await fetch("https://api.example.com/users");
    const data = await response.json();
    setUsers(data);
    } catch (error) {
    console.error("Error fetching users:", error);
    }
};


------------- Update (PUT or PATCH) ------------- 

const handleUpdate = async () => {
    try {
      const response = await fetch(`https://api.example.com/users/${userId}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, email }),
      });
      if (response.ok) {
        // handle success
      }
    } catch (error) {
      console.error("Error updating user:", error);
    }
};



------------- Delete (DELETE) ------------- 

const handleDelete = async (id) => {
  try {
    await fetch(`https://api.example.com/users/${id}`, { method: "DELETE" });
    // Update UI or state after deletion
  } catch (error) {
    console.error("Error deleting user:", error);
  }
};